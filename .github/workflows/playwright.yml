name: Playwright

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  e2e:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.0-jammy
      options: --user=root
    env:
      HOME: /root
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
      DOCKER_CONFIG: /tmp/.docker
    steps:
      - uses: actions/checkout@v4
      - name: Silence docker warning
        run: mkdir -p "$DOCKER_CONFIG" && echo '{}' > "$DOCKER_CONFIG/config.json"

      # (Optionnel mais utile) Cache npm
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Run Playwright (HTML)
        run: |
          [ -f .env.ci ] && cp .env.ci .env
          npm ci --no-audit --no-fund --prefer-offline
          npx playwright test -c ci.config.ts --reporter=html

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report
          name: github-pages

  reporting:
    needs: e2e
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      contents: read
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4
        with:
          enablement: true
