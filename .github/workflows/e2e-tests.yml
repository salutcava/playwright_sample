name: E2E Tests and PR Creation

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      site_url:
        description: 'URL du site √† tester'
        required: true
        default: 'https://salutcava.github.io/playwright_sample_site/'
      source_branch:
        description: 'Branche source du d√©ploiement'
        required: true
      source_sha:
        description: 'SHA du commit source'
        required: true
      source_repo:
        description: 'Repository source'
        required: true

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.0-jammy
      options: --user=root
    env:
      HOME: /root
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
      SITE_URL: ${{ inputs.site_url }}
    outputs:
      test-result: ${{ steps.tests.outcome }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: false
          lfs: false
      
      - name: Cache npm (~/.npm)
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-
      
      - name: Run Playwright tests
        id: tests
        continue-on-error: true
        run: |
          [ -f .env.ci ] && cp .env.ci .env
          npm ci --no-audit --no-fund --prefer-offline
          npx playwright test -c ci.config.ts --reporter=html
      
      - name: Upload Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report
          name: github-pages

  deploy-report:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      contents: read
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
        with:
          enablement: true

  create-pr:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout site repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.source_repo }}
          ref: ${{ inputs.source_branch }}
          token: ${{ secrets.PWS_PAT }}
          fetch-depth: 0
      
      - name: Create or Update Pull Request
        if: inputs.source_branch != 'main'
        uses: actions/github-script@v7
        env:
          TEST_RESULT: ${{ needs.e2e-tests.outputs.test-result }}
        with:
          github-token: ${{ secrets.PWS_PAT }}
          script: |
            const sourceBranch = '${{ inputs.source_branch }}';
            const sourceRepo = '${{ inputs.source_repo }}';
            const [owner, repo] = sourceRepo.split('/');
            const testResult = process.env.TEST_RESULT;
            const testStatus = testResult === 'success' ? '‚úÖ PASSED' : '‚ùå FAILED';
            const testEmoji = testResult === 'success' ? '‚úÖ' : '‚ùå';
            
            const prBody = `
            ## ${testEmoji} Tests E2E - ${testStatus}
            
            **Branch:** \`${sourceBranch}\`
            **Commit:** \`${{ inputs.source_sha }}\`
            **Site URL:** ${{ inputs.site_url }}
            
            ### R√©sultat des tests
            - Status: **${testStatus}**
            - [üìä Voir le rapport Playwright](https://salutcava.github.io/playwright_sample_e2e/)
            - [üîç D√©tails du workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ${testResult === 'success' ? 
              'üéâ Tous les tests sont pass√©s ! Cette PR peut √™tre merg√©e.' : 
              '‚ö†Ô∏è Des tests ont √©chou√©. Consultez le rapport Playwright pour plus de d√©tails.'}
            
            ---
            *G√©n√©r√© automatiquement par le workflow E2E*
            `;
            
            // Chercher une PR existante
            const { data: prs } = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:${sourceBranch}`
            });
            
            if (prs.length > 0) {
              // Mettre √† jour la PR existante
              const pr = prs[0];
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: pr.number,
                body: prBody
              });
              
              console.log(`PR #${pr.number} mise √† jour`);
              
              // Supprimer les anciens labels
              try {
                await github.rest.issues.removeLabel({
                  owner,
                  repo,
                  issue_number: pr.number,
                  name: testResult === 'success' ? 'e2e-failed' : 'e2e-passed'
                });
              } catch (e) {
                // Le label n'existe peut-√™tre pas
              }
              
              // Ajouter le nouveau label
              const labels = testResult === 'success' ? ['e2e-passed'] : ['e2e-failed'];
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: pr.number,
                labels
              });
            } else {
              // Cr√©er une nouvelle PR
              const { data: pr } = await github.rest.pulls.create({
                owner,
                repo,
                title: `${testEmoji} Deploy from ${sourceBranch}`,
                head: sourceBranch,
                base: 'main',
                body: prBody
              });
              
              console.log(`PR #${pr.number} cr√©√©e`);
              
              // Ajouter un label selon le r√©sultat
              const labels = testResult === 'success' ? ['e2e-passed'] : ['e2e-failed'];
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: pr.number,
                labels
              });
            }
      
      - name: Add status check
        if: always() && inputs.source_branch != 'main'
        uses: actions/github-script@v7
        env:
          TEST_RESULT: ${{ needs.e2e-tests.outputs.test-result }}
        with:
          github-token: ${{ secrets.PWS_PAT }}
          script: |
            const testResult = process.env.TEST_RESULT;
            const state = testResult === 'success' ? 'success' : 'failure';
            
            await github.rest.repos.createCommitStatus({
              owner: 'salutcava',
              repo: 'playwright_sample_site',
              sha: '${{ inputs.source_sha }}',
              state: state,
              target_url: 'https://salutcava.github.io/playwright_sample_e2e/',
              description: testResult === 'success' ? 'Tests E2E pass√©s' : 'Tests E2E √©chou√©s',
              context: 'E2E Tests'
            });